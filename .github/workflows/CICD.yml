name: CI/CD Pipeline for MyJourneyToWork

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build_and_analyze:
    name: Build, Test, and Analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "zulu"

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # For better analysis relevancy

      - name: Cache SonarCloud Packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud Scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud Scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          $path = '.\.sonar\scanner'
          if (-Not (Test-Path -Path $path)) {
              New-Item -Path $path -ItemType Directory
          }
          dotnet tool update dotnet-sonarscanner --tool-path $path

      - name: Install Coverlet
        shell: powershell
        run: |
          dotnet tool install --global coverlet.console

      - name: Start SonarCloud Analysis
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"GusTheProgrammer_MyJourneyToWork-DevOps" /o:"gus-shaal" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.xml" /d:sonar.verbose=true

      - name: Build Project
        shell: powershell
        run: |
          dotnet build --no-incremental

      - name: Run Unit and Acceptance Tests
        shell: powershell
        run: |
          dotnet test --no-build --logger:trx

      - name: Generate Coverage Report
        shell: powershell
        run: |
          coverlet .\MyJourneyToWorkTests\bin\Debug\net7.0\MyJourneyToWorkTests.dll --target "dotnet" --targetargs "test --no-build" -f opencover -o ".\MyJourneyToWorkTests\CodeCoverage\coverage.xml"

      - name: End SonarCloud Analysis
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "7.x"
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build_and_analyze
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "MyJourneytowork-gus"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_3F6F4D93526F4C2A9EC48B6960D01538 }}
          package: .
